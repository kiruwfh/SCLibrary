--[[
    ARISE UI - Красивый интерфейс для скриптов ARISE
    
    Особенности:
    - Современный дизайн с поддержкой анимаций
    - Система вкладок для удобной навигации
    - Поддержка различных типов элементов (кнопки, переключатели, слайдеры)
    - Система авторизации с ключом
    - Возможность загрузки через GitHub Raw URL
]]

-- Библиотека UI
local AriseUI = {}

-- Константы
AriseUI.Colors = {
    Background = Color3.fromRGB(25, 25, 35),
    Primary = Color3.fromRGB(45, 45, 65),
    Secondary = Color3.fromRGB(35, 35, 50),
    Accent = Color3.fromRGB(100, 100, 255),
    AccentHover = Color3.fromRGB(120, 120, 255),
    Text = Color3.fromRGB(220, 220, 220),
    TextDark = Color3.fromRGB(180, 180, 180),
    Success = Color3.fromRGB(100, 255, 100),
    Error = Color3.fromRGB(255, 100, 100),
    Warning = Color3.fromRGB(255, 200, 100)
}

AriseUI.Config = {
    AnimationSpeed = 0.3,
    RoundRadius = UDim.new(0, 8),
    ButtonRadius = UDim.new(0, 6),
    Draggable = true,
    Width = 500,
    Height = 350,
    LicenseKey = "hh.hg**@@"
}

-- Локальные переменные
local GUI = nil
local MainFrame = nil
local TabButtons = {}
local TabFrames = {}
local ActiveTab = nil
local OnActivatedCallbacks = {}
local Licensed = false

-- Утилиты
local function CreateTween(instance, properties, duration)
    duration = duration or AriseUI.Config.AnimationSpeed
    return game:GetService("TweenService"):Create(
        instance,
        TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        properties
    )
end

-- Функция для защиты GUI
local function ProtectGUI(gui)
    if syn and syn.protect_gui then
        syn.protect_gui(gui)
        gui.Parent = game:GetService("CoreGui")
    elseif gethui then
        gui.Parent = gethui()
    else
        gui.Parent = game:GetService("CoreGui")
    end
end

-- Создание базового GUI
function AriseUI:Create(title)
    -- Если GUI уже существует, удаляем
    if GUI then 
        GUI:Destroy()
        GUI = nil
    end
    
    -- Создаем основной ScreenGui
    GUI = Instance.new("ScreenGui")
    GUI.Name = "AriseUI"
    GUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ProtectGUI(GUI)
    
    -- Основной фрейм
    MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, self.Config.Width, 0, self.Config.Height)
    MainFrame.Position = UDim2.new(0.5, -self.Config.Width/2, 0.5, -self.Config.Height/2)
    MainFrame.BackgroundColor3 = self.Colors.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Parent = GUI
    
    -- Скругленные углы
    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Config.RoundRadius
    corner.Parent = MainFrame
    
    -- Тень
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.Position = UDim2.new(0, -15, 0, -15)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://5554236805"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.6
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(23, 23, 277, 277)
    shadow.ZIndex = -1
    shadow.Parent = MainFrame
    
    -- Заголовок
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = self.Colors.Primary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = MainFrame
    
    -- Скругление заголовка
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = self.Config.RoundRadius
    titleCorner.Parent = titleBar
    
    -- Исправление скругления заголовка
    local titleCornerFix = Instance.new("Frame")
    titleCornerFix.Name = "CornerFix"
    titleCornerFix.Size = UDim2.new(1, 0, 0.5, 0)
    titleCornerFix.Position = UDim2.new(0, 0, 0.5, 0)
    titleCornerFix.BackgroundColor3 = self.Colors.Primary
    titleCornerFix.BorderSizePixel = 0
    titleCornerFix.ZIndex = 0
    titleCornerFix.Parent = titleBar
    
    -- Заголовок текст
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -120, 1, 0)
    titleText.Position = UDim2.new(0, 15, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Font = Enum.Font.GothamBold
    titleText.Text = title or "ARISE UI"
    titleText.TextColor3 = self.Colors.Text
    titleText.TextSize = 16
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Parent = titleBar
    
    -- Логотип
    local logo = Instance.new("ImageLabel")
    logo.Name = "Logo"
    logo.Size = UDim2.new(0, 24, 0, 24)
    logo.Position = UDim2.new(1, -45, 0.5, -12)
    logo.BackgroundTransparency = 1
    logo.Image = "rbxassetid://6022668888" -- Заглушка, можно заменить на свой лого
    logo.ImageColor3 = self.Colors.Accent
    logo.Parent = titleBar
    
    -- Кнопка закрытия
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 24, 0, 24)
    closeButton.Position = UDim2.new(1, -35, 0.5, -12)
    closeButton.BackgroundColor3 = self.Colors.Error
    closeButton.Text = ""
    closeButton.AutoButtonColor = false
    closeButton.Parent = titleBar
    
    -- Скругление кнопки
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 4)
    closeCorner.Parent = closeButton
    
    -- Иконка X
    local closeIcon = Instance.new("TextLabel")
    closeIcon.Name = "CloseIcon"
    closeIcon.Size = UDim2.new(1, 0, 1, 0)
    closeIcon.BackgroundTransparency = 1
    closeIcon.Font = Enum.Font.GothamBold
    closeIcon.Text = "×"
    closeIcon.TextColor3 = self.Colors.Text
    closeIcon.TextSize = 20
    closeIcon.Parent = closeButton
    
    -- Эффект наведения
    closeButton.MouseEnter:Connect(function()
        CreateTween(closeButton, {BackgroundColor3 = Color3.fromRGB(255, 50, 50)}):Play()
    end)
    
    closeButton.MouseLeave:Connect(function()
        CreateTween(closeButton, {BackgroundColor3 = self.Colors.Error}):Play()
    end)
    
    -- Действие кнопки закрытия
    closeButton.MouseButton1Click:Connect(function()
        local fadeTween = CreateTween(MainFrame, {BackgroundTransparency = 1})
        fadeTween:Play()
        fadeTween.Completed:Connect(function()
            GUI:Destroy()
        end)
    end)
    
    -- Фрейм для содержимого
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "ContentContainer"
    contentContainer.Size = UDim2.new(1, 0, 1, -90) -- 40px для заголовка, 50px для вкладок
    contentContainer.Position = UDim2.new(0, 0, 0, 90)
    contentContainer.BackgroundTransparency = 1
    contentContainer.ClipsDescendants = true
    contentContainer.Parent = MainFrame
    
    -- Контейнер для вкладок
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(1, 0, 0, 50)
    tabContainer.Position = UDim2.new(0, 0, 0, 40)
    tabContainer.BackgroundColor3 = self.Colors.Secondary
    tabContainer.BorderSizePixel = 0
    tabContainer.Parent = MainFrame
    
    -- Нижняя линия для подсветки активной вкладки
    local activeTabLine = Instance.new("Frame")
    activeTabLine.Name = "ActiveTabLine"
    activeTabLine.Size = UDim2.new(0, 0, 0, 3)
    activeTabLine.Position = UDim2.new(0, 0, 1, -3)
    activeTabLine.BackgroundColor3 = self.Colors.Accent
    activeTabLine.BorderSizePixel = 0
    activeTabLine.Visible = false
    activeTabLine.Parent = tabContainer
    
    -- Делаем окно перетаскиваемым
    if self.Config.Draggable then
        local isDragging = false
        local dragInput
        local dragStart
        local startPos
        
        titleBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isDragging = true
                dragStart = input.Position
                startPos = MainFrame.Position
            end
        end)
        
        titleBar.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isDragging = false
            end
        end)
        
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                MainFrame.Position = UDim2.new(
                    startPos.X.Scale, 
                    startPos.X.Offset + delta.X, 
                    startPos.Y.Scale, 
                    startPos.Y.Offset + delta.Y
                )
            end
        end)
    end
    
    -- Возвращаем созданный интерфейс
    return {
        GUI = GUI,
        MainFrame = MainFrame,
        TitleBar = titleBar,
        ContentContainer = contentContainer,
        TabContainer = tabContainer,
        ActiveTabLine = activeTabLine
    }
end

-- Добавление новой вкладки
function AriseUI:AddTab(name, icon)
    if not GUI then
        error("UI не создан. Сначала вызовите метод Create.")
    end
    
    -- Создаем кнопку вкладки
    local tabContainerWidth = MainFrame.TabContainer.AbsoluteSize.X
    local tabCount = #TabButtons + 1
    local tabWidth = math.min(150, tabContainerWidth / (tabCount > 2 and tabCount or 2))
    
    local tabButton = Instance.new("TextButton")
    tabButton.Name = name .. "Tab"
    tabButton.Size = UDim2.new(0, tabWidth, 1, 0)
    tabButton.Position = UDim2.new(0, tabWidth * (#TabButtons), 0, 0)
    tabButton.BackgroundTransparency = 1
    tabButton.Font = Enum.Font.Gotham
    tabButton.Text = name
    tabButton.TextColor3 = self.Colors.TextDark
    tabButton.TextSize = 14
    tabButton.Parent = MainFrame.TabContainer
    
    -- Добавляем иконку, если указана
    if icon then
        local iconImage = Instance.new("ImageLabel")
        iconImage.Name = "Icon"
        iconImage.Size = UDim2.new(0, 20, 0, 20)
        iconImage.Position = UDim2.new(0, 10, 0.5, -10)
        iconImage.BackgroundTransparency = 1
        iconImage.Image = icon
        iconImage.ImageColor3 = self.Colors.TextDark
        iconImage.Parent = tabButton
        
        -- Сдвигаем текст вправо
        tabButton.Text = "    " .. name
    end
    
    -- Создаем контент для вкладки
    local tabFrame = Instance.new("ScrollingFrame")
    tabFrame.Name = name .. "Content"
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.BackgroundTransparency = 1
    tabFrame.BorderSizePixel = 0
    tabFrame.ScrollBarThickness = 6
    tabFrame.ScrollBarImageColor3 = self.Colors.Primary
    tabFrame.Visible = false
    tabFrame.Parent = MainFrame.ContentContainer
    
    -- Устанавливаем автоматическую компоновку элементов
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Padding = UDim.new(0, 10)
    uiListLayout.FillDirection = Enum.FillDirection.Vertical
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayout.Parent = tabFrame
    
    -- Верхний отступ
    local topPadding = Instance.new("UIPadding")
    topPadding.PaddingTop = UDim.new(0, 10)
    topPadding.PaddingLeft = UDim.new(0, 15)
    topPadding.PaddingRight = UDim.new(0, 15)
    topPadding.PaddingBottom = UDim.new(0, 10)
    topPadding.Parent = tabFrame
    
    -- Обработка изменения размера контента
    uiListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tabFrame.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y + 20)
    end)
    
    -- Сохраняем ссылки на вкладку
    table.insert(TabButtons, tabButton)
    TabFrames[tabButton] = tabFrame
    
    -- Обработка нажатия на вкладку
    tabButton.MouseButton1Click:Connect(function()
        self:SelectTab(tabButton)
    end)
    
    -- Эффекты наведения
    tabButton.MouseEnter:Connect(function()
        if ActiveTab ~= tabButton then
            CreateTween(tabButton, {TextColor3 = self.Colors.Text}):Play()
            
            local icon = tabButton:FindFirstChild("Icon")
            if icon then
                CreateTween(icon, {ImageColor3 = self.Colors.Text}):Play()
            end
        end
    end)
    
    tabButton.MouseLeave:Connect(function()
        if ActiveTab ~= tabButton then
            CreateTween(tabButton, {TextColor3 = self.Colors.TextDark}):Play()
            
            local icon = tabButton:FindFirstChild("Icon")
            if icon then
                CreateTween(icon, {ImageColor3 = self.Colors.TextDark}):Play()
            end
        end
    end)
    
    -- Если это первая вкладка, активируем ее
    if #TabButtons == 1 then
        self:SelectTab(tabButton)
    end
    
    -- Возвращаем фрейм контента вкладки для добавления элементов
    return tabFrame
end

-- Выбор вкладки
function AriseUI:SelectTab(tabButton)
    if not tabButton or not TabFrames[tabButton] then return end
    
    -- Скрываем все вкладки и сбрасываем цвета кнопок
    for _, btn in ipairs(TabButtons) do
        TabFrames[btn].Visible = false
        CreateTween(btn, {TextColor3 = self.Colors.TextDark}):Play()
        
        local icon = btn:FindFirstChild("Icon")
        if icon then
            CreateTween(icon, {ImageColor3 = self.Colors.TextDark}):Play()
        end
    end
    
    -- Показываем выбранную вкладку и обновляем ее кнопку
    TabFrames[tabButton].Visible = true
    CreateTween(tabButton, {TextColor3 = self.Colors.Accent}):Play()
    
    local icon = tabButton:FindFirstChild("Icon")
    if icon then
        CreateTween(icon, {ImageColor3 = self.Colors.Accent}):Play()
    end
    
    -- Анимация подсветки активной вкладки
    local activeLine = MainFrame.TabContainer.ActiveTabLine
    activeLine.Visible = true
    
    -- Анимация перемещения и изменения размера
    CreateTween(
        activeLine, 
        {
            Size = UDim2.new(0, tabButton.AbsoluteSize.X, 0, 3),
            Position = UDim2.new(0, tabButton.AbsolutePosition.X - MainFrame.AbsolutePosition.X, 1, -3)
        }
    ):Play()
    
    -- Запоминаем активную вкладку
    ActiveTab = tabButton
    
    -- Вызываем колбэк, если есть
    local tabName = tabButton.Name:gsub("Tab$", "")
    if OnActivatedCallbacks[tabName] then
        OnActivatedCallbacks[tabName]()
    end
end

-- Добавление заголовка секции
function AriseUI:AddSection(parent, title)
    -- Создаем контейнер секции
    local section = Instance.new("Frame")
    section.Name = title .. "Section"
    section.Size = UDim2.new(1, 0, 0, 30)
    section.BackgroundTransparency = 1
    section.LayoutOrder = #parent:GetChildren()
    section.Parent = parent
    
    -- Заголовок секции
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title
    titleLabel.TextColor3 = self.Colors.Accent
    titleLabel.TextSize = 14
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = section
    
    -- Линия под заголовком
    local line = Instance.new("Frame")
    line.Name = "Line"
    line.Size = UDim2.new(1, 0, 0, 1)
    line.Position = UDim2.new(0, 0, 1, -1)
    line.BackgroundColor3 = self.Colors.Primary
    line.BorderSizePixel = 0
    line.Parent = section
    
    return section
end

-- Добавление текстовой метки
function AriseUI:AddLabel(parent, text)
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, 0, 0, 25)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.Text = text
    label.TextColor3 = self.Colors.Text
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.LayoutOrder = #parent:GetChildren()
    label.Parent = parent
    
    return label
end

-- Добавление кнопки
function AriseUI:AddButton(parent, text, callback)
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Name = text .. "ButtonContainer"
    buttonContainer.Size = UDim2.new(1, 0, 0, 35)
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.LayoutOrder = #parent:GetChildren()
    buttonContainer.Parent = parent
    
    local button = Instance.new("TextButton")
    button.Name = text .. "Button"
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundColor3 = self.Colors.Primary
    button.Font = Enum.Font.Gotham
    button.Text = text
    button.TextColor3 = self.Colors.Text
    button.TextSize = 14
    button.AutoButtonColor = false
    button.Parent = buttonContainer
    
    -- Скругление кнопки
    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Config.ButtonRadius
    corner.Parent = button
    
    -- Эффекты наведения и клика
    button.MouseEnter:Connect(function()
        CreateTween(button, {BackgroundColor3 = self.Colors.Accent}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        CreateTween(button, {BackgroundColor3 = self.Colors.Primary}):Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        CreateTween(button, {BackgroundColor3 = self.Colors.AccentHover}, 0.1):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        CreateTween(button, {BackgroundColor3 = self.Colors.Accent}, 0.1):Play()
    end)
    
    -- Добавляем обработчик клика
    button.MouseButton1Click:Connect(function()
        pcall(callback)
    end)
    
    return button
end

-- Добавление переключателя (чекбокса)
function AriseUI:AddToggle(parent, text, default, callback)
    default = default or false
    
    local toggleContainer = Instance.new("Frame")
    toggleContainer.Name = text .. "ToggleContainer"
    toggleContainer.Size = UDim2.new(1, 0, 0, 35)
    toggleContainer.BackgroundTransparency = 1
    toggleContainer.LayoutOrder = #parent:GetChildren()
    toggleContainer.Parent = parent
    
    -- Фон переключателя
    local toggleBackground = Instance.new("Frame")
    toggleBackground.Name = "Background"
    toggleBackground.Size = UDim2.new(0, 44, 0, 24)
    toggleBackground.Position = UDim2.new(1, -44, 0.5, -12)
    toggleBackground.BackgroundColor3 = self.Colors.Primary
    toggleBackground.Parent = toggleContainer
    
    -- Скругление фона
    local backgroundCorner = Instance.new("UICorner")
    backgroundCorner.CornerRadius = UDim.new(0, 12)
    backgroundCorner.Parent = toggleBackground
    
    -- Ползунок
    local toggleHandle = Instance.new("Frame")
    toggleHandle.Name = "Handle"
    toggleHandle.Size = UDim2.new(0, 20, 0, 20)
    toggleHandle.Position = UDim2.new(0, 2, 0.5, -10)
    toggleHandle.BackgroundColor3 = self.Colors.Text
    toggleHandle.Parent = toggleBackground
    
    -- Скругление ползунка
    local handleCorner = Instance.new("UICorner")
    handleCorner.CornerRadius = UDim.new(0, 10)
    handleCorner.Parent = toggleHandle
    
    -- Текст переключателя
    local toggleText = Instance.new("TextLabel")
    toggleText.Name = "Text"
    toggleText.Size = UDim2.new(1, -54, 1, 0)
    toggleText.BackgroundTransparency = 1
    toggleText.Font = Enum.Font.Gotham
    toggleText.Text = text
    toggleText.TextColor3 = self.Colors.Text
    toggleText.TextSize = 14
    toggleText.TextXAlignment = Enum.TextXAlignment.Left
    toggleText.Parent = toggleContainer
    
    -- Состояние переключателя
    local toggled = default
    
    -- Функция обновления визуального состояния
    local function updateVisual()
        if toggled then
            CreateTween(toggleBackground, {BackgroundColor3 = self.Colors.Accent}):Play()
            CreateTween(toggleHandle, {Position = UDim2.new(0, 22, 0.5, -10)}):Play()
        else
            CreateTween(toggleBackground, {BackgroundColor3 = self.Colors.Primary}):Play()
            CreateTween(toggleHandle, {Position = UDim2.new(0, 2, 0.5, -10)}):Play()
        end
    end
    
    -- Начальное обновление
    updateVisual()
    
    -- Область нажатия
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "ToggleButton"
    toggleButton.Size = UDim2.new(1, 0, 1, 0)
    toggleButton.BackgroundTransparency = 1
    toggleButton.Text = ""
    toggleButton.Parent = toggleContainer
    
    -- Обработка нажатия
    toggleButton.MouseButton1Click:Connect(function()
        toggled = not toggled
        updateVisual()
        
        if callback then
            pcall(callback, toggled)
        end
    end)
    
    -- Возвращаем функции для управления переключателем
    return {
        Set = function(value)
            toggled = value
            updateVisual()
            
            if callback then
                pcall(callback, toggled)
            end
        end,
        Get = function()
            return toggled
        end
    }
end

-- Добавление слайдера
function AriseUI:AddSlider(parent, text, min, max, default, callback)
    min = min or 0
    max = max or 100
    default = default or min
    
    -- Контейнер для слайдера
    local sliderContainer = Instance.new("Frame")
    sliderContainer.Name = text .. "SliderContainer"
    sliderContainer.Size = UDim2.new(1, 0, 0, 50)
    sliderContainer.BackgroundTransparency = 1
    sliderContainer.LayoutOrder = #parent:GetChildren()
    sliderContainer.Parent = parent
    
    -- Текст слайдера
    local sliderText = Instance.new("TextLabel")
    sliderText.Name = "Text"
    sliderText.Size = UDim2.new(1, 0, 0, 25)
    sliderText.BackgroundTransparency = 1
    sliderText.Font = Enum.Font.Gotham
    sliderText.Text = text
    sliderText.TextColor3 = self.Colors.Text
    sliderText.TextSize = 14
    sliderText.TextXAlignment = Enum.TextXAlignment.Left
    sliderText.Parent = sliderContainer
    
    -- Фон слайдера
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = "Frame"
    sliderFrame.Size = UDim2.new(1, -120, 0, 6)
    sliderFrame.Position = UDim2.new(0, 0, 0.7, 0)
    sliderFrame.BackgroundColor3 = self.Colors.Primary
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Parent = sliderContainer
    
    -- Скругление фона
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 3)
    sliderCorner.Parent = sliderFrame
    
    -- Заполнение слайдера
    local sliderFill = Instance.new("Frame")
    sliderFill.Name = "Fill"
    sliderFill.Size = UDim2.new(0, 0, 1, 0)
    sliderFill.BackgroundColor3 = self.Colors.Accent
    sliderFill.BorderSizePixel = 0
    sliderFill.Parent = sliderFrame
    
    -- Скругление заполнения
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 3)
    fillCorner.Parent = sliderFill
    
    -- Ползунок
    local sliderHandle = Instance.new("Frame")
    sliderHandle.Name = "Handle"
    sliderHandle.Size = UDim2.new(0, 14, 0, 14)
    sliderHandle.Position = UDim2.new(0, -7, 0.5, -7)
    sliderHandle.BackgroundColor3 = self.Colors.Text
    sliderHandle.Parent = sliderFill
    
    -- Скругление ползунка
    local handleCorner = Instance.new("UICorner")
    handleCorner.CornerRadius = UDim.new(0, 7)
    handleCorner.Parent = sliderHandle
    
    -- Значение слайдера
    local valueText = Instance.new("TextLabel")
    valueText.Name = "Value"
    valueText.Size = UDim2.new(0, 110, 0, 25)
    valueText.Position = UDim2.new(1, -110, 0, 0)
    valueText.BackgroundTransparency = 1
    valueText.Font = Enum.Font.GothamBold
    valueText.Text = tostring(default)
    valueText.TextColor3 = self.Colors.Text
    valueText.TextSize = 14
    valueText.TextXAlignment = Enum.TextXAlignment.Right
    valueText.Parent = sliderContainer
    
    -- Текущее значение
    local value = default
    
    -- Функция для обновления визуального состояния
    local function updateVisual()
        -- Вычисляем процент
        local percent = (value - min) / (max - min)
        
        -- Обновляем заполнение
        CreateTween(sliderFill, {Size = UDim2.new(percent, 0, 1, 0)}):Play()
        
        -- Обновляем текст значения
        valueText.Text = tostring(math.floor(value * 100) / 100)
    end
    
    -- Начальное обновление
    updateVisual()
    
    -- Область нажатия
    local sliderButton = Instance.new("TextButton")
    sliderButton.Name = "SliderButton"
    sliderButton.Size = UDim2.new(1, 0, 1, 0)
    sliderButton.BackgroundTransparency = 1
    sliderButton.Text = ""
    sliderButton.Parent = sliderContainer
    
    -- Обработка перетаскивания
    local isDragging = false
    
    sliderButton.MouseButton1Down:Connect(function()
        isDragging = true
    end)
    
    game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    sliderButton.MouseMoved:Connect(function(mouseX)
        if isDragging then
            -- Вычисляем новое значение на основе позиции мыши
            local sliderPos = sliderFrame.AbsolutePosition.X
            local sliderWidth = sliderFrame.AbsoluteSize.X
            local percent = math.clamp((mouseX - sliderPos) / sliderWidth, 0, 1)
            
            -- Обновляем значение
            value = min + percent * (max - min)
            updateVisual()
            
            -- Вызываем колбэк
            if callback then
                pcall(callback, value)
            end
        end
    end)
    
    -- Возвращаем функции для управления слайдером
    return {
        Set = function(newValue)
            value = math.clamp(newValue, min, max)
            updateVisual()
            
            if callback then
                pcall(callback, value)
            end
        end,
        Get = function()
            return value
        end
    }
end

-- Добавление текстового поля
function AriseUI:AddTextbox(parent, text, placeholder, callback)
    -- Контейнер для текстбокса
    local textboxContainer = Instance.new("Frame")
    textboxContainer.Name = text .. "TextboxContainer"
    textboxContainer.Size = UDim2.new(1, 0, 0, 60)
    textboxContainer.BackgroundTransparency = 1
    textboxContainer.LayoutOrder = #parent:GetChildren()
    textboxContainer.Parent = parent
    
    -- Текст над полем
    local textboxText = Instance.new("TextLabel")
    textboxText.Name = "Text"
    textboxText.Size = UDim2.new(1, 0, 0, 25)
    textboxText.BackgroundTransparency = 1
    textboxText.Font = Enum.Font.Gotham
    textboxText.Text = text
    textboxText.TextColor3 = self.Colors.Text
    textboxText.TextSize = 14
    textboxText.TextXAlignment = Enum.TextXAlignment.Left
    textboxText.Parent = textboxContainer
    
    -- Фон поля ввода
    local textboxFrame = Instance.new("Frame")
    textboxFrame.Name = "Frame"
    textboxFrame.Size = UDim2.new(1, 0, 0, 30)
    textboxFrame.Position = UDim2.new(0, 0, 0.5, 0)
    textboxFrame.BackgroundColor3 = self.Colors.Primary
    textboxFrame.BorderSizePixel = 0
    textboxFrame.Parent = textboxContainer
    
    -- Скругление фона
    local frameCorner = Instance.new("UICorner")
    frameCorner.CornerRadius = self.Config.ButtonRadius
    frameCorner.Parent = textboxFrame
    
    -- Поле ввода
    local textbox = Instance.new("TextBox")
    textbox.Name = "Textbox"
    textbox.Size = UDim2.new(1, -20, 1, 0)
    textbox.Position = UDim2.new(0, 10, 0, 0)
    textbox.BackgroundTransparency = 1
    textbox.Font = Enum.Font.Gotham
    textbox.PlaceholderText = placeholder or "Введите текст..."
    textbox.PlaceholderColor3 = self.Colors.TextDark
    textbox.Text = ""
    textbox.TextColor3 = self.Colors.Text
    textbox.TextSize = 14
    textbox.TextXAlignment = Enum.TextXAlignment.Left
    textbox.ClearTextOnFocus = false
    textbox.Parent = textboxFrame
    
    -- Эффекты фокуса
    textbox.Focused:Connect(function()
        CreateTween(textboxFrame, {BackgroundColor3 = self.Colors.Accent}):Play()
    end)
    
    textbox.FocusLost:Connect(function(enterPressed)
        CreateTween(textboxFrame, {BackgroundColor3 = self.Colors.Primary}):Play()
        
        if enterPressed and callback then
            pcall(callback, textbox.Text)
        end
    end)
    
    -- Возвращаем функции для управления полем ввода
    return {
        Set = function(text)
            textbox.Text = text
        end,
        Get = function()
            return textbox.Text
        end
    }
end

-- Добавление окна авторизации
function AriseUI:ShowKeySystem(title, callback)
    local mainUI = self:Create(title or "ARISE KEY SYSTEM")
    local content = mainUI.ContentContainer
    
    -- Заголовок
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -40, 0, 40)
    titleLabel.Position = UDim2.new(0, 20, 0, 20)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = "Авторизация"
    titleLabel.TextColor3 = self.Colors.Text
    titleLabel.TextSize = 20
    titleLabel.TextXAlignment = Enum.TextXAlignment.Center
    titleLabel.Parent = content
    
    -- Описание
    local descriptionLabel = Instance.new("TextLabel")
    descriptionLabel.Name = "Description"
    descriptionLabel.Size = UDim2.new(1, -60, 0, 40)
    descriptionLabel.Position = UDim2.new(0, 30, 0, 60)
    descriptionLabel.BackgroundTransparency = 1
    descriptionLabel.Font = Enum.Font.Gotham
    descriptionLabel.Text = "Пожалуйста, введите ключ доступа для использования скрипта."
    descriptionLabel.TextColor3 = self.Colors.TextDark
    descriptionLabel.TextSize = 14
    descriptionLabel.TextXAlignment = Enum.TextXAlignment.Center
    descriptionLabel.TextWrapped = true
    descriptionLabel.Parent = content
    
    -- Фон поля ввода
    local keyFrame = Instance.new("Frame")
    keyFrame.Name = "KeyFrame"
    keyFrame.Size = UDim2.new(1, -80, 0, 40)
    keyFrame.Position = UDim2.new(0, 40, 0, 120)
    keyFrame.BackgroundColor3 = self.Colors.Primary
    keyFrame.BorderSizePixel = 0
    keyFrame.Parent = content
    
    -- Скругление фона
    local frameCorner = Instance.new("UICorner")
    frameCorner.CornerRadius = self.Config.ButtonRadius
    frameCorner.Parent = keyFrame
    
    -- Поле ввода ключа
    local keyTextbox = Instance.new("TextBox")
    keyTextbox.Name = "KeyTextbox"
    keyTextbox.Size = UDim2.new(1, -20, 1, 0)
    keyTextbox.Position = UDim2.new(0, 10, 0, 0)
    keyTextbox.BackgroundTransparency = 1
    keyTextbox.Font = Enum.Font.Gotham
    keyTextbox.PlaceholderText = "Введите ключ..."
    keyTextbox.PlaceholderColor3 = self.Colors.TextDark
    keyTextbox.Text = ""
    keyTextbox.TextColor3 = self.Colors.Text
    keyTextbox.TextSize = 14
    keyTextbox.TextXAlignment = Enum.TextXAlignment.Center
    keyTextbox.ClearTextOnFocus = false
    keyTextbox.Parent = keyFrame
    
    -- Эффекты фокуса
    keyTextbox.Focused:Connect(function()
        CreateTween(keyFrame, {BackgroundColor3 = self.Colors.Accent}):Play()
    end)
    
    keyTextbox.FocusLost:Connect(function()
        CreateTween(keyFrame, {BackgroundColor3 = self.Colors.Primary}):Play()
    end)
    
    -- Кнопка проверки
    local submitButton = Instance.new("TextButton")
    submitButton.Name = "SubmitButton"
    submitButton.Size = UDim2.new(0, 200, 0, 40)
    submitButton.Position = UDim2.new(0.5, -100, 0, 180)
    submitButton.BackgroundColor3 = self.Colors.Primary
    submitButton.Font = Enum.Font.GothamBold
    submitButton.Text = "ПРОВЕРИТЬ"
    submitButton.TextColor3 = self.Colors.Text
    submitButton.TextSize = 14
    submitButton.AutoButtonColor = false
    submitButton.Parent = content
    
    -- Скругление кнопки
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = self.Config.ButtonRadius
    buttonCorner.Parent = submitButton
    
    -- Эффекты наведения и клика
    submitButton.MouseEnter:Connect(function()
        CreateTween(submitButton, {BackgroundColor3 = self.Colors.Accent}):Play()
    end)
    
    submitButton.MouseLeave:Connect(function()
        CreateTween(submitButton, {BackgroundColor3 = self.Colors.Primary}):Play()
    end)
    
    submitButton.MouseButton1Down:Connect(function()
        CreateTween(submitButton, {BackgroundColor3 = self.Colors.AccentHover}, 0.1):Play()
    end)
    
    submitButton.MouseButton1Up:Connect(function()
        CreateTween(submitButton, {BackgroundColor3 = self.Colors.Accent}, 0.1):Play()
    end)
    
    -- Статус ошибки
    local errorLabel = Instance.new("TextLabel")
    errorLabel.Name = "ErrorLabel"
    errorLabel.Size = UDim2.new(1, -40, 0, 30)
    errorLabel.Position = UDim2.new(0, 20, 0, 230)
    errorLabel.BackgroundTransparency = 1
    errorLabel.Font = Enum.Font.Gotham
    errorLabel.Text = ""
    errorLabel.TextColor3 = self.Colors.Error
    errorLabel.TextSize = 14
    errorLabel.TextXAlignment = Enum.TextXAlignment.Center
    errorLabel.Parent = content
    
    -- Функция проверки ключа
    local function checkKey()
        local userKey = keyTextbox.Text
        
        -- Проверяем ключ
        if userKey == self.Config.LicenseKey then
            -- Успешная авторизация
            CreateTween(keyFrame, {BackgroundColor3 = self.Colors.Success}):Play()
            CreateTween(submitButton, {BackgroundColor3 = self.Colors.Success}):Play()
            errorLabel.Text = "Ключ верный! Загрузка..."
            errorLabel.TextColor3 = self.Colors.Success
            
            -- Анимация успешной авторизации
            wait(1)
            
            -- Закрываем окно авторизации
            local fadeTween = CreateTween(mainUI.MainFrame, {BackgroundTransparency = 1})
            fadeTween:Play()
            fadeTween.Completed:Connect(function()
                GUI:Destroy()
                Licensed = true
                
                -- Вызываем колбэк
                if callback then
                    pcall(callback, true)
                end
            end)
        else
            -- Неверный ключ
            CreateTween(keyFrame, {BackgroundColor3 = self.Colors.Error}):Play()
            errorLabel.Text = "Неверный ключ! Попробуйте еще раз."
            errorLabel.TextColor3 = self.Colors.Error
            
            -- Анимация встряски
            local shake = function()
                local orig = keyFrame.Position
                
                CreateTween(keyFrame, {Position = orig + UDim2.new(0, -5, 0, 0)}, 0.05):Play()
                wait(0.05)
                CreateTween(keyFrame, {Position = orig + UDim2.new(0, 5, 0, 0)}, 0.05):Play()
                wait(0.05)
                CreateTween(keyFrame, {Position = orig + UDim2.new(0, -5, 0, 0)}, 0.05):Play()
                wait(0.05)
                CreateTween(keyFrame, {Position = orig}, 0.05):Play()
            end
            
            spawn(shake)
            
            -- Сбрасываем цвет через некоторое время
            wait(1)
            CreateTween(keyFrame, {BackgroundColor3 = self.Colors.Primary}):Play()
        end
    end
    
    -- Обработка нажатия кнопки
    submitButton.MouseButton1Click:Connect(checkKey)
    
    -- Обработка Enter в поле ввода
    keyTextbox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            checkKey()
        end
    end)
end

-- Функция для проверки ключа и отображения полного интерфейса
function AriseUI:Initialize(title, mainCallback)
    self:ShowKeySystem(title, function(success)
        if success then
            wait(0.5) -- Небольшая задержка для плавности
            
            -- Создаем основной интерфейс и передаем его в колбэк
            local ui = self:Create(title)
            
            if mainCallback then
                mainCallback(ui)
            end
        end
    end)
end

-- Загрузка UI через внешний URL
function AriseUI:LoadFromURL(url, callback)
    local success, result = pcall(function()
        return game:HttpGet(url)
    end)
    
    if success then
        local loadSuccess, loadedUI = pcall(function()
            return loadstring(result)()
        end)
        
        if loadSuccess and callback then
            callback(loadedUI)
            return loadedUI
        else
            warn("Не удалось загрузить UI из URL: " .. tostring(loadedUI))
            return nil
        end
    else
        warn("Не удалось получить содержимое URL: " .. tostring(result))
        return nil
    end
end

-- Создаем и возвращаем объект для тестирования
return AriseUI
