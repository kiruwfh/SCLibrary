--[[
    ARISE UI - Красивый интерфейс для скриптов ARISE
    
    Особенности:
    - Современный дизайн с поддержкой анимаций
    - Система вкладок для удобной навигации
    - Поддержка различных типов элементов (кнопки, переключатели, слайдеры)
    - Система авторизации с ключом
    - Простая интеграция через GitHub
    
    Автор: kiruwfh
]]

-- Библиотека UI
local AriseUI = {}

-- Константы
AriseUI.Colors = {
    Background = {25, 25, 35},
    Primary = {45, 45, 65},
    Secondary = {35, 35, 50},
    Accent = {100, 100, 255},
    AccentHover = {120, 120, 255},
    Text = {220, 220, 220},
    TextDark = {180, 180, 180},
    Success = {100, 255, 100},
    Error = {255, 100, 100},
    Warning = {255, 200, 100}
}

AriseUI.Config = {
    AnimationSpeed = 0.3,
    RoundRadius = UDim.new(0, 8),
    ButtonRadius = UDim.new(0, 6),
    Draggable = true,
    Width = 500,
    Height = 350,
    LicenseKey = "hh.hg**@@"
}

-- Локальные переменные
local GUI = nil
local MainFrame = nil
local TabButtons = {}
local TabFrames = {}
local ActiveTab = nil
local OnActivatedCallbacks = {}
local Licensed = false

-- Утилиты
local function CreateTween(instance, properties, duration)
    duration = duration or AriseUI.Config.AnimationSpeed
    return game:GetService("TweenService"):Create(
        instance,
        TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
        properties
    )
end

-- Функция для защиты GUI
local function ProtectGUI(gui)
    if syn and syn.protect_gui then
        syn.protect_gui(gui)
        gui.Parent = game:GetService("CoreGui")
    elseif gethui then
        gui.Parent = gethui()
    else
        gui.Parent = game:GetService("CoreGui")
    end
end

-- Создание базового GUI
function AriseUI:Create(title)
    -- Если GUI уже существует, удаляем
    if GUI then 
        GUI:Destroy()
        GUI = nil
    end
    
    -- Создаем основной ScreenGui
    GUI = Instance.new("ScreenGui")
    GUI.Name = "AriseUI"
    GUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ProtectGUI(GUI)
    
    -- Основной фрейм
    MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, self.Config.Width, 0, self.Config.Height)
    MainFrame.Position = UDim2.new(0.5, -self.Config.Width/2, 0.5, -self.Config.Height/2)
    MainFrame.BackgroundColor3 = self.Colors.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Parent = GUI
    
    -- Скругленные углы
    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Config.RoundRadius
    corner.Parent = MainFrame
    
    -- Тень
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.Position = UDim2.new(0, -15, 0, -15)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://5554236805"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.6
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(23, 23, 277, 277)
    shadow.ZIndex = -1
    shadow.Parent = MainFrame
    
    -- Заголовок
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = self.Colors.Primary
    titleBar.BorderSizePixel = 0
    titleBar.Parent = MainFrame
    
    -- Скругление заголовка
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = self.Config.RoundRadius
    titleCorner.Parent = titleBar
    
    -- Исправление скругления заголовка
    local titleCornerFix = Instance.new("Frame")
    titleCornerFix.Name = "CornerFix"
    titleCornerFix.Size = UDim2.new(1, 0, 0.5, 0)
    titleCornerFix.Position = UDim2.new(0, 0, 0.5, 0)
    titleCornerFix.BackgroundColor3 = self.Colors.Primary
    titleCornerFix.BorderSizePixel = 0
    titleCornerFix.ZIndex = 0
    titleCornerFix.Parent = titleBar
    
    -- Заголовок текст
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -120, 1, 0)
    titleText.Position = UDim2.new(0, 15, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Font = Enum.Font.GothamBold
    titleText.Text = title or "ARISE UI"
    titleText.TextColor3 = self.Colors.Text
    titleText.TextSize = 16
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Parent = titleBar
    
    -- Логотип
    local logo = Instance.new("ImageLabel")
    logo.Name = "Logo"
    logo.Size = UDim2.new(0, 24, 0, 24)
    logo.Position = UDim2.new(1, -45, 0.5, -12)
    logo.BackgroundTransparency = 1
    logo.Image = "rbxassetid://6022668888"
    logo.ImageColor3 = self.Colors.Accent
    logo.Parent = titleBar
    
    -- Кнопка закрытия
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 24, 0, 24)
    closeButton.Position = UDim2.new(1, -35, 0.5, -12)
    closeButton.BackgroundColor3 = self.Colors.Error
    closeButton.Text = ""
    closeButton.AutoButtonColor = false
    closeButton.Parent = titleBar
    
    -- Скругление кнопки
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 4)
    closeCorner.Parent = closeButton
    
    -- Иконка X
    local closeIcon = Instance.new("TextLabel")
    closeIcon.Name = "CloseIcon"
    closeIcon.Size = UDim2.new(1, 0, 1, 0)
    closeIcon.BackgroundTransparency = 1
    closeIcon.Font = Enum.Font.GothamBold
    closeIcon.Text = "×"
    closeIcon.TextColor3 = self.Colors.Text
    closeIcon.TextSize = 20
    closeIcon.Parent = closeButton
    
    -- Эффект наведения
    closeButton.MouseEnter:Connect(function()
        CreateTween(closeButton, {BackgroundColor3 = Color3.fromRGB(255, 50, 50)}):Play()
    end)
    
    closeButton.MouseLeave:Connect(function()
        CreateTween(closeButton, {BackgroundColor3 = self.Colors.Error}):Play()
    end)
    
    -- Действие кнопки закрытия
    closeButton.MouseButton1Click:Connect(function()
        local fadeTween = CreateTween(MainFrame, {BackgroundTransparency = 1})
        fadeTween:Play()
        fadeTween.Completed:Connect(function()
            GUI:Destroy()
        end)
    end)
    
    -- Фрейм для содержимого
    local contentContainer = Instance.new("Frame")
    contentContainer.Name = "ContentContainer"
    contentContainer.Size = UDim2.new(1, 0, 1, -90) -- 40px для заголовка, 50px для вкладок
    contentContainer.Position = UDim2.new(0, 0, 0, 90)
    contentContainer.BackgroundTransparency = 1
    contentContainer.ClipsDescendants = true
    contentContainer.Parent = MainFrame
    
    -- Контейнер для вкладок
    local tabContainer = Instance.new("Frame")
    tabContainer.Name = "TabContainer"
    tabContainer.Size = UDim2.new(1, 0, 0, 50)
    tabContainer.Position = UDim2.new(0, 0, 0, 40)
    tabContainer.BackgroundColor3 = self.Colors.Secondary
    tabContainer.BorderSizePixel = 0
    tabContainer.Parent = MainFrame
    
    -- Нижняя линия для подсветки активной вкладки
    local activeTabLine = Instance.new("Frame")
    activeTabLine.Name = "ActiveTabLine"
    activeTabLine.Size = UDim2.new(0, 0, 0, 3)
    activeTabLine.Position = UDim2.new(0, 0, 1, -3)
    activeTabLine.BackgroundColor3 = self.Colors.Accent
    activeTabLine.BorderSizePixel = 0
    activeTabLine.Visible = false
    activeTabLine.Parent = tabContainer
    
    -- Делаем окно перетаскиваемым
    if self.Config.Draggable then
        local isDragging = false
        local dragInput
        local dragStart
        local startPos
        
        titleBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isDragging = true
                dragStart = input.Position
                startPos = MainFrame.Position
            end
        end)
        
        titleBar.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                isDragging = false
            end
        end)
        
        game:GetService("UserInputService").InputChanged:Connect(function(input)
            if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                local delta = input.Position - dragStart
                MainFrame.Position = UDim2.new(
                    startPos.X.Scale, 
                    startPos.X.Offset + delta.X, 
                    startPos.Y.Scale, 
                    startPos.Y.Offset + delta.Y
                )
            end
        end)
    end
    
    -- Возвращаем созданный интерфейс
    return {
        GUI = GUI,
        MainFrame = MainFrame,
        TitleBar = titleBar,
        ContentContainer = contentContainer,
        TabContainer = tabContainer,
        ActiveTabLine = activeTabLine
    }
end

-- Добавление новой вкладки
function AriseUI:AddTab(name, icon)
    if not GUI then
        error("UI не создан. Сначала вызовите метод Create.")
    end
    
    -- Создаем кнопку вкладки
    local tabContainerWidth = MainFrame.TabContainer.AbsoluteSize.X
    local tabCount = #TabButtons + 1
    local tabWidth = math.min(150, tabContainerWidth / (tabCount > 2 and tabCount or 2))
    
    local tabButton = Instance.new("TextButton")
    tabButton.Name = name .. "Tab"
    tabButton.Size = UDim2.new(0, tabWidth, 1, 0)
    tabButton.Position = UDim2.new(0, tabWidth * (#TabButtons), 0, 0)
    tabButton.BackgroundTransparency = 1
    tabButton.Font = Enum.Font.Gotham
    tabButton.Text = name
    tabButton.TextColor3 = self.Colors.TextDark
    tabButton.TextSize = 14
    tabButton.Parent = MainFrame.TabContainer
    
    -- Добавляем иконку, если указана
    if icon then
        local iconImage = Instance.new("ImageLabel")
        iconImage.Name = "Icon"
        iconImage.Size = UDim2.new(0, 20, 0, 20)
        iconImage.Position = UDim2.new(0, 10, 0.5, -10)
        iconImage.BackgroundTransparency = 1
        iconImage.Image = icon
        iconImage.ImageColor3 = self.Colors.TextDark
        iconImage.Parent = tabButton
        
        -- Сдвигаем текст вправо
        tabButton.Text = "    " .. name
    end
    
    -- Создаем контент для вкладки
    local tabFrame = Instance.new("ScrollingFrame")
    tabFrame.Name = name .. "Content"
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.BackgroundTransparency = 1
    tabFrame.BorderSizePixel = 0
    tabFrame.ScrollBarThickness = 6
    tabFrame.ScrollBarImageColor3 = self.Colors.Primary
    tabFrame.Visible = false
    tabFrame.Parent = MainFrame.ContentContainer
    
    -- Устанавливаем автоматическую компоновку элементов
    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Padding = UDim.new(0, 10)
    uiListLayout.FillDirection = Enum.FillDirection.Vertical
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayout.Parent = tabFrame
    
    -- Верхний отступ
    local topPadding = Instance.new("UIPadding")
    topPadding.PaddingTop = UDim.new(0, 10)
    topPadding.PaddingLeft = UDim.new(0, 15)
    topPadding.PaddingRight = UDim.new(0, 15)
    topPadding.PaddingBottom = UDim.new(0, 10)
    topPadding.Parent = tabFrame
    
    -- Обработка изменения размера контента
    uiListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        tabFrame.CanvasSize = UDim2.new(0, 0, 0, uiListLayout.AbsoluteContentSize.Y + 20)
    end)
    
    -- Сохраняем ссылки на вкладку
    table.insert(TabButtons, tabButton)
    TabFrames[tabButton] = tabFrame
    
    -- Обработка нажатия на вкладку
    tabButton.MouseButton1Click:Connect(function()
        self:SelectTab(tabButton)
    end)
    
    -- Эффекты наведения
    tabButton.MouseEnter:Connect(function()
        if ActiveTab ~= tabButton then
            CreateTween(tabButton, {TextColor3 = self.Colors.Text}):Play()
            
            local icon = tabButton:FindFirstChild("Icon")
            if icon then
                CreateTween(icon, {ImageColor3 = self.Colors.Text}):Play()
            end
        end
    end)
    
    tabButton.MouseLeave:Connect(function()
        if ActiveTab ~= tabButton then
            CreateTween(tabButton, {TextColor3 = self.Colors.TextDark}):Play()
            
            local icon = tabButton:FindFirstChild("Icon")
            if icon then
                CreateTween(icon, {ImageColor3 = self.Colors.TextDark}):Play()
            end
        end
    end)
    
    -- Если это первая вкладка, активируем ее
    if #TabButtons == 1 then
        self:SelectTab(tabButton)
    end
    
    -- Возвращаем фрейм контента вкладки для добавления элементов
    return tabFrame
end

-- Выбор вкладки
function AriseUI:SelectTab(tabButton)
    if not tabButton or not TabFrames[tabButton] then return end
    
    -- Скрываем все вкладки и сбрасываем цвета кнопок
    for _, btn in ipairs(TabButtons) do
        TabFrames[btn].Visible = false
        CreateTween(btn, {TextColor3 = self.Colors.TextDark}):Play()
        
        local icon = btn:FindFirstChild("Icon")
        if icon then
            CreateTween(icon, {ImageColor3 = self.Colors.TextDark}):Play()
        end
    end
    
    -- Показываем выбранную вкладку и обновляем ее кнопку
    TabFrames[tabButton].Visible = true
    CreateTween(tabButton, {TextColor3 = self.Colors.Accent}):Play()
    
    local icon = tabButton:FindFirstChild("Icon")
    if icon then
        CreateTween(icon, {ImageColor3 = self.Colors.Accent}):Play()
    end
    
    -- Анимация подсветки активной вкладки
    local activeLine = MainFrame.TabContainer.ActiveTabLine
    activeLine.Visible = true
    
    -- Анимация перемещения и изменения размера
    CreateTween(
        activeLine, 
        {
            Size = UDim2.new(0, tabButton.AbsoluteSize.X, 0, 3),
            Position = UDim2.new(0, tabButton.AbsolutePosition.X - MainFrame.AbsolutePosition.X, 1, -3)
        }
    ):Play()
    
    -- Запоминаем активную вкладку
    ActiveTab = tabButton
    
    -- Вызываем колбэк, если есть
    local tabName = tabButton.Name:gsub("Tab$", "")
    if OnActivatedCallbacks[tabName] then
        OnActivatedCallbacks[tabName]()
    end
end

-- Добавление заголовка секции
function AriseUI:AddSection(parent, title)
    -- Создаем контейнер секции
    local section = Instance.new("Frame")
    section.Name = title .. "Section"
    section.Size = UDim2.new(1, 0, 0, 30)
    section.BackgroundTransparency = 1
    section.LayoutOrder = #parent:GetChildren()
    section.Parent = parent
    
    -- Заголовок секции
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, 0, 1, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title
    titleLabel.TextColor3 = self.Colors.Accent
    titleLabel.TextSize = 14
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = section
    
    -- Линия под заголовком
    local line = Instance.new("Frame")
    line.Name = "Line"
    line.Size = UDim2.new(1, 0, 0, 1)
    line.Position = UDim2.new(0, 0, 1, -1)
    line.BackgroundColor3 = self.Colors.Primary
    line.BorderSizePixel = 0
    line.Parent = section
    
    return section
end

-- Добавление текстовой метки
function AriseUI:AddLabel(parent, text)
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, 0, 0, 25)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.Text = text
    label.TextColor3 = self.Colors.Text
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.LayoutOrder = #parent:GetChildren()
    label.Parent = parent
    
    return label
end

-- Добавление кнопки
function AriseUI:AddButton(parent, text, callback)
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Name = text .. "ButtonContainer"
    buttonContainer.Size = UDim2.new(1, 0, 0, 35)
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.LayoutOrder = #parent:GetChildren()
    buttonContainer.Parent = parent
    
    local button = Instance.new("TextButton")
    button.Name = text .. "Button"
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundColor3 = self.Colors.Primary
    button.Font = Enum.Font.Gotham
    button.Text = text
    button.TextColor3 = self.Colors.Text
    button.TextSize = 14
    button.AutoButtonColor = false
    button.Parent = buttonContainer
    
    -- Скругленные углы
    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Config.ButtonRadius
    corner.Parent = button
    
    -- Эффекты наведения и нажатия
    button.MouseEnter:Connect(function()
        CreateTween(button, {BackgroundColor3 = self.Colors.Secondary}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        CreateTween(button, {BackgroundColor3 = self.Colors.Primary}):Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        CreateTween(button, {BackgroundColor3 = self.Colors.Accent}):Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        CreateTween(button, {BackgroundColor3 = self.Colors.Secondary}):Play()
    end)
    
    -- Привязываем колбэк
    if callback then
        button.MouseButton1Click:Connect(function()
            callback()
        end)
    end
    
    return button
end

-- Добавление переключателя
function AriseUI:AddToggle(parent, text, default, callback)
    default = default or false
    
    local toggleContainer = Instance.new("Frame")
    toggleContainer.Name = text .. "ToggleContainer"
    toggleContainer.Size = UDim2.new(1, 0, 0, 35)
    toggleContainer.BackgroundTransparency = 1
    toggleContainer.LayoutOrder = #parent:GetChildren()
    toggleContainer.Parent = parent
    
    -- Текст переключателя
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, -50, 1, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.Text = text
    label.TextColor3 = self.Colors.Text
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = toggleContainer
    
    -- Фон переключателя
    local toggleBackground = Instance.new("Frame")
    toggleBackground.Name = "Background"
    toggleBackground.Size = UDim2.new(0, 40, 0, 22)
    toggleBackground.Position = UDim2.new(1, -45, 0.5, -11)
    toggleBackground.BackgroundColor3 = default and self.Colors.Accent or self.Colors.Primary
    toggleBackground.Parent = toggleContainer
    
    -- Скругленные углы
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 11)
    corner.Parent = toggleBackground
    
    -- Индикатор переключателя
    local indicator = Instance.new("Frame")
    indicator.Name = "Indicator"
    indicator.Size = UDim2.new(0, 16, 0, 16)
    indicator.Position = UDim2.new(0, default and 21 or 3, 0.5, -8)
    indicator.BackgroundColor3 = self.Colors.Text
    indicator.Parent = toggleBackground
    
    -- Скругленные углы индикатора
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 8)
    indicatorCorner.Parent = indicator
    
    -- Текущее значение
    local value = default
    
    -- Функция установки значения
    local function SetValue(newValue)
        value = newValue
        
        -- Анимация переключателя
        CreateTween(
            indicator, 
            {Position = UDim2.new(0, value and 21 or 3, 0.5, -8)}
        ):Play()
        
        CreateTween(
            toggleBackground, 
            {BackgroundColor3 = value and self.Colors.Accent or self.Colors.Primary}
        ):Play()
        
        -- Вызов колбэка
        if callback then
            callback(value)
        end
    end
    
    -- Обработка нажатия
    toggleBackground.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            SetValue(not value)
        end
    end)
    
    indicator.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            SetValue(not value)
        end
    end)
    
    -- Возвращаем интерфейс для управления переключателем
    return {
        Set = SetValue,
        Get = function() return value end
    }
end

-- Добавление слайдера
function AriseUI:AddSlider(parent, text, min, max, default, callback)
    min = min or 0
    max = max or 100
    default = math.clamp(default or min, min, max)
    
    local sliderContainer = Instance.new("Frame")
    sliderContainer.Name = text .. "SliderContainer"
    sliderContainer.Size = UDim2.new(1, 0, 0, 50)
    sliderContainer.BackgroundTransparency = 1
    sliderContainer.LayoutOrder = #parent:GetChildren()
    sliderContainer.Parent = parent
    
    -- Текст слайдера
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, -50, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 0)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.Text = text
    label.TextColor3 = self.Colors.Text
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = sliderContainer
    
    -- Отображение значения
    local valueLabel = Instance.new("TextLabel")
    valueLabel.Name = "Value"
    valueLabel.Size = UDim2.new(0, 45, 0, 20)
    valueLabel.Position = UDim2.new(1, -45, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.Font = Enum.Font.Gotham
    valueLabel.Text = tostring(default)
    valueLabel.TextColor3 = self.Colors.Text
    valueLabel.TextSize = 14
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.Parent = sliderContainer
    
    -- Фон слайдера
    local sliderBackground = Instance.new("Frame")
    sliderBackground.Name = "Background"
    sliderBackground.Size = UDim2.new(1, 0, 0, 8)
    sliderBackground.Position = UDim2.new(0, 0, 0, 30)
    sliderBackground.BackgroundColor3 = self.Colors.Primary
    sliderBackground.Parent = sliderContainer
    
    -- Скругленные углы
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 4)
    corner.Parent = sliderBackground
    
    -- Заполнение слайдера
    local fill = Instance.new("Frame")
    fill.Name = "Fill"
    fill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = self.Colors.Accent
    fill.BorderSizePixel = 0
    fill.Parent = sliderBackground
    
    -- Скругленные углы для заполнения
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 4)
    fillCorner.Parent = fill
    
    -- Индикатор слайдера
    local indicator = Instance.new("Frame")
    indicator.Name = "Indicator"
    indicator.Size = UDim2.new(0, 16, 0, 16)
    indicator.Position = UDim2.new((default - min) / (max - min), -8, 0, -4)
    indicator.BackgroundColor3 = self.Colors.Text
    indicator.Parent = sliderBackground
    
    -- Скругленные углы индикатора
    local indicatorCorner = Instance.new("UICorner")
    indicatorCorner.CornerRadius = UDim.new(0, 8)
    indicatorCorner.Parent = indicator
    
    -- Текущее значение
    local value = default
    
    -- Функция установки значения
    local function SetValue(newValue)
        local numberValue = tonumber(newValue)
        if not numberValue then return end
        
        -- Ограничиваем значение
        value = math.clamp(numberValue, min, max)
        
        -- Обновляем отображение
        valueLabel.Text = string.format("%.1f", value)
        
        -- Обновляем позицию и размер
        local percent = (value - min) / (max - min)
        fill.Size = UDim2.new(percent, 0, 1, 0)
        indicator.Position = UDim2.new(percent, -8, 0, -4)
        
        -- Вызов колбэка
        if callback then
            callback(value)
        end
    end
    
    -- Обработка перетаскивания
    local isDragging = false
    
    sliderBackground.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            
            -- Обновляем значение на основе позиции мыши
            local relativeX = input.Position.X - sliderBackground.AbsolutePosition.X
            local percent = math.clamp(relativeX / sliderBackground.AbsoluteSize.X, 0, 1)
            local newValue = min + (max - min) * percent
            
            SetValue(newValue)
        end
    end)
    
    indicator.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
        end
    end)
    
    game:GetService("UserInputService").InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = false
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            -- Обновляем значение на основе позиции мыши
            local relativeX = input.Position.X - sliderBackground.AbsolutePosition.X
            local percent = math.clamp(relativeX / sliderBackground.AbsoluteSize.X, 0, 1)
            local newValue = min + (max - min) * percent
            
            SetValue(newValue)
        end
    end)
    
    -- Возвращаем интерфейс для управления слайдером
    return {
        Set = SetValue,
        Get = function() return value end
    }
end

-- ===== СИСТЕМА АВТОРИЗАЦИИ =====

-- Создание интерфейса ввода ключа
function AriseUI:ShowKeySystem(title, callback)
    -- Проверяем, авторизован ли уже пользователь
    if Licensed then
        if callback then
            callback(true)
        end
        return
    end
    
    -- Создаем ScreenGui
    local keyGui = Instance.new("ScreenGui")
    keyGui.Name = "AriseKeySystem"
    keyGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ProtectGUI(keyGui)
    
    -- Фон с затемнением
    local background = Instance.new("Frame")
    background.Name = "Background"
    background.Size = UDim2.new(1, 0, 1, 0)
    background.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    background.BackgroundTransparency = 0.5
    background.BorderSizePixel = 0
    background.Parent = keyGui
    
    -- Основной фрейм
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 350, 0, 200)
    mainFrame.Position = UDim2.new(0.5, -175, 0.5, -100)
    mainFrame.BackgroundColor3 = self.Colors.Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = keyGui
    
    -- Скругленные углы
    local corner = Instance.new("UICorner")
    corner.CornerRadius = self.Config.RoundRadius
    corner.Parent = mainFrame
    
    -- Тень
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.Position = UDim2.new(0, -15, 0, -15)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://5554236805"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.6
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(23, 23, 277, 277)
    shadow.ZIndex = -1
    shadow.Parent = mainFrame
    
    -- Заголовок
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, 0, 0, 50)
    titleLabel.BackgroundColor3 = self.Colors.Primary
    titleLabel.BorderSizePixel = 0
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = title or "ARISE АВТОРИЗАЦИЯ"
    titleLabel.TextColor3 = self.Colors.Text
    titleLabel.TextSize = 18
    titleLabel.Parent = mainFrame
    
    -- Скругленные углы заголовка
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = self.Config.RoundRadius
    titleCorner.Parent = titleLabel
    
    -- Исправление углов заголовка
    local titleCornerFix = Instance.new("Frame")
    titleCornerFix.Name = "CornerFix"
    titleCornerFix.Size = UDim2.new(1, 0, 0.5, 0)
    titleCornerFix.Position = UDim2.new(0, 0, 0.5, 0)
    titleCornerFix.BackgroundColor3 = self.Colors.Primary
    titleCornerFix.BorderSizePixel = 0
    titleCornerFix.ZIndex = 0
    titleCornerFix.Parent = titleLabel
    
    -- Поле ввода ключа
    local keyInput = Instance.new("TextBox")
    keyInput.Name = "KeyInput"
    keyInput.Size = UDim2.new(0.9, 0, 0, 40)
    keyInput.Position = UDim2.new(0.05, 0, 0.5, -20)
    keyInput.BackgroundColor3 = self.Colors.Secondary
    keyInput.Font = Enum.Font.Gotham
    keyInput.PlaceholderText = "Введите лицензионный ключ..."
    keyInput.Text = ""
    keyInput.TextColor3 = self.Colors.Text
    keyInput.TextSize = 14
    keyInput.Parent = mainFrame
    
    -- Скругленные углы поля ввода
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 6)
    inputCorner.Parent = keyInput
    
    -- Кнопка проверки ключа
    local submitButton = Instance.new("TextButton")
    submitButton.Name = "SubmitButton"
    submitButton.Size = UDim2.new(0.9, 0, 0, 40)
    submitButton.Position = UDim2.new(0.05, 0, 0.5, 30)
    submitButton.BackgroundColor3 = self.Colors.Accent
    submitButton.Font = Enum.Font.GothamBold
    submitButton.Text = "ВОЙТИ"
    submitButton.TextColor3 = self.Colors.Text
    submitButton.TextSize = 16
    submitButton.AutoButtonColor = false
    submitButton.Parent = mainFrame
    
    -- Скругленные углы кнопки
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = submitButton
    
    -- Метка ошибки
    local errorLabel = Instance.new("TextLabel")
    errorLabel.Name = "ErrorLabel"
    errorLabel.Size = UDim2.new(1, 0, 0, 30)
    errorLabel.Position = UDim2.new(0, 0, 1, -35)
    errorLabel.BackgroundTransparency = 1
    errorLabel.Font = Enum.Font.Gotham
    errorLabel.Text = ""
    errorLabel.TextColor3 = self.Colors.Error
    errorLabel.TextSize = 14
    errorLabel.Visible = false
    errorLabel.Parent = mainFrame
    
    -- Эффекты наведения для кнопки
    submitButton.MouseEnter:Connect(function()
        CreateTween(submitButton, {BackgroundColor3 = self.Colors.AccentHover}):Play()
    end)
    
    submitButton.MouseLeave:Connect(function()
        CreateTween(submitButton, {BackgroundColor3 = self.Colors.Accent}):Play()
    end)
    
    -- Функция проверки ключа
    local function CheckKey()
        local key = keyInput.Text
        
        if key == self.Config.LicenseKey then
            -- Успешная авторизация
            Licensed = true
            
            -- Анимация успеха
            CreateTween(submitButton, {BackgroundColor3 = self.Colors.Success}):Play()
            errorLabel.Visible = true
            errorLabel.Text = "Авторизация успешна!"
            errorLabel.TextColor3 = self.Colors.Success
            
            -- Скрываем окно авторизации
            wait(1)
            keyGui:Destroy()
            
            -- Вызываем колбэк
            if callback then
                callback(true)
            end
        else
            -- Ошибка авторизации
            CreateTween(submitButton, {BackgroundColor3 = self.Colors.Error}):Play()
            errorLabel.Visible = true
            errorLabel.Text = "Неверный ключ!"
            errorLabel.TextColor3 = self.Colors.Error
            
            wait(2)
            CreateTween(submitButton, {BackgroundColor3 = self.Colors.Accent}):Play()
        end
    end
    
    -- Обработка нажатия кнопки
    submitButton.MouseButton1Click:Connect(CheckKey)
    
    -- Обработка нажатия Enter в поле ввода
    keyInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            CheckKey()
        end
    end)
    
    -- Анимация появления
    background.BackgroundTransparency = 1
    mainFrame.Position = UDim2.new(0.5, -175, 0.6, -100)
    mainFrame.BackgroundTransparency = 1
    
    CreateTween(background, {BackgroundTransparency = 0.5}, 0.5):Play()
    
    local frameTween = CreateTween(mainFrame, {
        Position = UDim2.new(0.5, -175, 0.5, -100),
        BackgroundTransparency = 0
    }, 0.5)
    
    frameTween:Play()
end

-- Инициализация с авторизацией
function AriseUI:Initialize(title, mainCallback)
    self:ShowKeySystem(title, function(success)
        if success then
            wait(0.5) -- Небольшая задержка для плавности
            
            -- Создаем основной интерфейс и передаем его в колбэк
            local ui = self:Create(title)
            
            if mainCallback then
                mainCallback(ui)
            end
        end
    end)
end

-- Возвращаем библиотеку
return AriseUI
